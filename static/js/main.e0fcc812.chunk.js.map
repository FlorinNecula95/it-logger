{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchBar.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","components/layout/Preloader.js","components/logs/LogItem.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOption.js","components/logs/AddModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","initialState","logs","loading","error","techs","combineReducers","log","state","action","filter","map","console","tech","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Preloader","deleteLog","method","setCurrent","href","attention","onClick","message","format","date","M","toast","html","getLogs","PropTypes","func","isRequired","useEffect","length","AddBtn","getTechs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updatedLog","addTech","setFirstName","setLastName","deleteTech","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0fcc812.chunk.js","sourcesContent":["export const GET_LOGS = \"GET_LOGS\";\r\nexport const ADD_LOG = \"ADD_LOG\";\r\nexport const DELETE_LOG = \"DELETE_LOG\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_LOG = \"UPDATE_LOG\";\r\nexport const CLEAR_LOGS = \"CLEAR_LOGS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const LOGS_ERROR = \"LOGS_ERROR\";\r\nexport const SEARCH_LOGS = \"SEARCH_LOGS\";\r\nexport const GET_TECHS = \"GET_TECHS\";\r\nexport const ADD_TECH = \"ADD_TECH\";\r\nexport const DELETE_TECH = \"DELETE_TECH\";\r\nexport const TECHS_ERROR = \"TECHS_ERROR\";\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n} from \"./types\";\r\n\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/logs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Update log on server\r\nexport const updateLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT,\r\n  };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { searchLogs } from \"../../actions/logActions\";\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef(\"\");\r\n\r\n  const onChange = (e) => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: \"30px\" }} className='blue'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              id='search'\r\n              type='search'\r\n              placeholder='Search Logs..'\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className='label-icon' htmlFor='search'>\r\n              <i className='material-icons'>search</i>\r\n            </label>\r\n            <i className='material-icons'>close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        ),\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  SET_LOADING,\r\n  DELETE_TECH,\r\n  TECHS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport logReducer from \"./logReducer\";\r\nimport techReducer from \"./techReducer\";\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='progress blue lighten-4'>\r\n      <div className='indeterminate blue'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteLog, setCurrent } from \"../../actions/logActions\";\r\n\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: \"Log Deleted\" });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? \"red-text\" : \"blue-text\"\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by{\" \"}\r\n          <span className='black-text'>{log.tech}</span> on{\" \"}\r\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' onClick={onDelete} className='secondary-content'>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n","import React, { useEffect } from \"react\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport LogItem from \"./LogItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLogs } from \"../../actions/logActions\";\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No logs to show...</p>\r\n      ) : (\r\n        logs.map((log) => <LogItem log={log} key={log.id} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n  getLogs: PropTypes.func.isRequired,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from \"react\";\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  SET_LOADING,\r\n  DELETE_TECH,\r\n  TECHS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/techs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addTech = (tech) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/techs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTech = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/techs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getTechs } from \"../../actions/techActions\";\r\n\r\nconst TechSelectOption = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map((t) => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOption.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOption);\r\n","import React, { useState } from \"react\";\r\nimport TechSelectOption from \"../techs/TechSelectOption\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addLog } from \"../../actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst AddModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  const onSubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please enter a message and tech\" });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      addLog(newLog);\r\n\r\n      M.toast({ html: `Log added by ${tech}` });\r\n\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor=\"message\" className=\"active\">\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOption />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue btn-flat\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n};\r\n\r\nexport default connect(null, { addLog })(AddModal);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TechSelectOption from \"../techs/TechSelectOption\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { updateLog } from \"../../actions/logActions\";\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please enter a message and tech\" });\r\n    } else {\r\n      const updatedLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      updateLog(updatedLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOption />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue btn-flat\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  current: state.log.current,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTech } from \"../../actions/techActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === \"\" || lastName === \"\") {\r\n      M.toast({ html: \"Please enter the first and last name\" });\r\n    } else {\r\n      addTech({\r\n        firstName,\r\n        lastName,\r\n      });\r\n\r\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-tech-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>New Technician</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"firstName\" className=\"active\">\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"lastName\" className=\"active\">\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue btn-flat\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteTech } from \"../../actions/techActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst TechItem = ({ tech: { firstName, lastName, id }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: \"Technician deleted\" });\r\n  };\r\n\r\n  return (\r\n    <li className=\"collection-item\">\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\r\n          <i className=\"material-icons grey-text\">delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport TechItem from \"./TechItem\";\r\nimport { getTechs } from \"../../actions/techActions\";\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"tech-list-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Technician List</h4>\r\n        <ul className=\"collection\">\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map((tech) => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport SearchBar from \"./components/layout/SearchBar\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport \"./App.css\";\r\nimport Logs from \"./components/logs/Logs\";\r\nimport AddBtn from \"./components/layout/AddBtn\";\r\nimport AddModal from \"./components/logs/AddModal\";\r\nimport EditLogModal from \"./components/logs/EditLogModal\";\r\nimport AddTechModal from \"./components/techs/AddTechModal\";\r\nimport TechListModal from \"./components/techs/TechListModal\";\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    //Init Materialize JS\r\n    M.AutoInit();\r\n  });\r\n  return (\r\n    <Provider store={store}>\r\n      <Fragment>\r\n        <SearchBar />\r\n        <div className='container'>\r\n          <AddBtn />\r\n          <AddModal />\r\n          <EditLogModal />\r\n          <AddTechModal />\r\n          <TechListModal />\r\n          <Logs />\r\n        </div>\r\n      </Fragment>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}